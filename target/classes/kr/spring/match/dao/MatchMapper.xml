<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper  namespace="kr.spring.match.dao.MatchMapper">
	<insert id="insertMatch" parameterType="matchVO">
		insert into match
			(id,type,home,away,away_name,address,address_x,address_y,match_date,start_time,end_time,match_detail,cost)
		values
			(#{id},#{type},#{home},#{away},#{away_name},#{address},#{address_x},#{address_y},#{match_date},#{start_time},#{end_time},
		<if test="match_detail != ''">
			#{match_detail},
		</if>
		<if test="match_detail == ''">
			'',
		</if>
		<if test="cost != ''">
			#{cost})
		</if>
		<if test="cost == ''">
			'')
		</if>
	</insert>
	<insert id="insertRecruit" parameterType="matchVO" useGeneratedKeys="true" keyProperty="recruit_num">
		insert into match_recruit
			(match_num,id,club_num,recruit_position,recruit_count,recruit_cost,recruit_detail)
		values
			(#{match_num},#{id},#{club_num},#{recruit_position},#{recruit_count},#{recruit_cost},
			<if test="recruit_detail != ''">
			#{recruit_detail})
			</if>
			<if test="recruit_detail == ''">
				'')
			</if>
			<selectKey keyProperty="recruit_num" resultType="integer" order="AFTER">
				select max(recruit_num) as recruit_num from match_recruit
			</selectKey>
	</insert>
	<select id="selectAverageRating" parameterType="matchVO" resultType="matchVO">
		select a.club_num,a.club_name,b.perform,b.manner from (select club_num, club_name from club where club_num=#{home} or club_num=#{away} ) a 
	    left outer join
	    (select club_num, avg(perform) as perform, avg(manner) as manner
			 from club_rating group by club_num) b
             on a.club_num=b.club_num
	</select>
	<insert id="insertRating" parameterType="matchVO">
		insert into club_rating
			(clubrating_num,match_num,id,club_num,perform,manner,rating_detail)
		values
			(clubrating_seq.nextval,#{match_num},#{id},#{club_num},#{perform},#{manner},
		<if test="rating_detail !=''">
			#{rating_detail})
		</if>
		<if test="rating_detail ==''">
			'')
		</if>
	</insert>
	<update id="updateRating" parameterType="matchVO">
		update club_rating set manner=#{manner},perform=#{perform}
		<if test="rating_detail !=''">
			,rating_detail=#{rating_detail}
		</if>
		where clubrating_num=#{clubrating_num}
	</update>
	<select id="selectVote_detail" parameterType="matchVO" resultType="memberVO">
		select a.club_num,a.id,a.nickname,a.thumbnail_image,a.profile_image,b.status from
			(select * from match_vote where club_num=#{club_num} and match_num=#{match_num})b right outer join 
    		(select c.club_num club_num,c.id,m.nickname,m.thumbnail_image,m.profile_image from member_detail m join club_join c on m.id=c.id where c.club_num=#{club_num} and c.club_auth>3)
    		a on b.id=a.id
	</select>
	<select id="selectMatchToInvite" resultType="matchVO">
		select * from 
				(select * from (select * from match where match_date>sysdate-1 and away=0)a join club b on a.home=b.club_num) d
				left outer join
				(select avg(manner) manner,avg(perform) perform,club_num from club_rating group by club_num) e on d.club_num=e.club_num where cancel is null order by d.match_date
	</select>
	<select id="selectMatchToInviteByMatch_num" parameterType="Integer" resultType="matchVO">
		select * from 
				(select * from (select * from match where match_num=#{match_num})a join club b on a.home=b.club_num) d
				left outer join
				(select avg(manner) manner,avg(perform) perform,club_num,count(*) count from club_rating group by club_num) e on d.club_num=e.club_num
	</select>
	<insert id="insertMyRequestForMatchToInvite" parameterType="matchVO">
		insert into match_request
			(match_num,id,away,acceptance,request_detail)
		values
			(#{match_num},#{id},#{away},1,
		<if test="request_detail !=''">
			#{request_detail})
		</if>
		<if test="request_detail ==''">
			'')
		</if>
	</insert>
	<select id="selectRecruitDetail" parameterType="integer" resultType="matchVO">
		select * from 
    (select recruit_num,c.id,c.match_num,c.club_num,recruit_position, recruit_count, recruit_cost,recruit_detail,type,start_time,end_time,address,match_date,address_x,address_y,club_name,club_img,club_color,club_age from
        (select recruit_num,a.match_num,a.id,club_num,recruit_position,recruit_count,recruit_cost,recruit_detail,type,start_time,end_time,address,match_date,address_x,address_y from
            (select * from match_recruit where recruit_num=#{recruit_num}) a join match b on a.match_num=b.match_num)c join club d on c.club_num=d.club_num) e left outer join
    (select avg(manner) manner,avg(perform) perform,club_num,count(*) count from club_rating group by club_num) f on e.club_num=f.club_num
	</select>
	<insert id="insertRecruitRequest" parameterType="matchVO">
		insert into recruit_req
			(id,club_num,match_num,recruit_position,recruit_req_detail)
		values
			(#{id},#{club_num},#{match_num},#{recruit_position},
			<if test="recruit_req_detail!=''">
			#{recruit_req_detail})
			</if>
			<if test="recruit_req_detail==''">
			'')
			</if>
	</insert>
	<select id="selectRecruit" resultType="matchVO">
		select * from (select recruit_num,c.club_num,recruit_position, recruit_count, recruit_cost,cancel,recruit_detail,type,start_time,end_time,address,match_date,address_x,address_y,club_name,club_img,club_color,club_age from(select * from (select * from match_recruit) a join match b on a.match_num=b.match_num where b.match_date>sysdate-1 order by b.match_date)c join club d on c.club_num=d.club_num) e
		left outer join (select avg(manner) manner,avg(perform) perform,club_num,count(*) count from club_rating group by club_num) f on e.club_num=f.club_num where cancel is null
	</select>
	<select id="selectRecruitByClub_num" parameterType="integer" resultType="memberVO">
		 select * from
    ( select a.id,recruit_req_num,isCanceled,cancel,a.club_num,a.match_num,a.recruit_req_detail,a.recruit_position,a.recruit_accept,b.match_date,b.start_time,b.end_time,b.address from 
        (select * from recruit_req where club_num=#{club_num}) a join match b on a.match_num=b.match_num where b.match_date>sysdate-1 order by b.match_date)f 
            join member_detail g using(id)
	</select>
	<update id="updateRecruit" parameterType="matchVO">
	update match_recruit set id=#{id},recruit_cost=#{recruit_cost},recruit_count=#{recruit_count},recruit_position=#{recruit_position}
		<if test="recruit_detail!=''">
		,recruit_detail=#{recruit_detail}
		</if>
		where recruit_num=#{recruit_num}
	</update>
	<select id="selectPKsforMatch" parameterType="matchVO" resultType="matchVO">
	select request_num,c.match_num,c.away,c.recruit_num from
    (select recruit_num,a.match_num,away from (select home,away,match_num from match where match_num=#{match_num})a left outer join match_recruit b on a.match_num=b.match_num)c left outer join
        match_request d on c.match_num=d.match_num
	</select>
	<update id="updateMatch" parameterType="matchVO">
		update match set match_num=#{match_num}
			<if test="match_detail != ''">
				,match_detail=#{match_detail}
			</if>
			where match_num=#{match_num}
	</update>
</mapper>
